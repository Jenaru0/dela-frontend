# 🚀 Auto-Deploy a Dokploy
# Despliega automáticamente cuando se hace push a las ramas de producción

name: 🚀 Deploy to Dokploy

on:
  push:
    branches:
      - frontend/production
      - backend/production
  workflow_dispatch: # Permite ejecutar manualmente

jobs:
  deploy-frontend:
    name: 🎨 Deploy Frontend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/frontend/production'

    steps:
      - name: 📂 Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'web/package.json'

      - name: 📦 Install Frontend Dependencies
        working-directory: web
        run: npm ci

      - name: 🏗️ Build Frontend
        working-directory: web
        run: npm run build

      - name: ✅ Frontend Ready for Deploy
        run: |
          echo "✅ Frontend build completado exitosamente"
          echo "🚀 Dokploy detectará este push automáticamente via webhook"
          echo "🔗 Monitorea el progreso en: https://admin.episundc.pe"
          echo "📅 Commit: ${{ github.sha }}"
          echo "👤 Deploy iniciado por: ${{ github.actor }}"

  deploy-backend:
    name: 🔧 Deploy Backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/backend/production'

    steps:
      - name: 📂 Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'api/package.json'

      - name: 📦 Install Backend Dependencies
        working-directory: api
        run: npm ci

      - name: 🏗️ Build Backend
        working-directory: api
        run: npm run build

      - name: ✅ Backend Ready for Deploy
        run: |
          echo "✅ Backend build completado exitosamente"
          echo "🚀 Dokploy detectará este push automáticamente via webhook"
          echo "🔗 Monitorea el progreso en: https://admin.episundc.pe"
          echo "📅 Commit: ${{ github.sha }}"
          echo "👤 Deploy iniciado por: ${{ github.actor }}"

  validate-build:
    name: ✅ Validar Build Exitoso
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]
    if: always() && (needs.deploy-frontend.result == 'success' || needs.deploy-backend.result == 'success')

    steps:
      - name: 🎉 Build y Deploy Validado
        run: |
          echo "🎉 Validación completada exitosamente"
          echo "✅ Código validado y listo para producción"
          echo "🚀 Dokploy manejará el deploy automáticamente"
          echo "📅 Fecha: $(date)"
          echo "🔗 Commit: ${{ github.sha }}"
          echo "👤 Usuario: ${{ github.actor }}"
          echo "🌐 Dashboard: https://admin.episundc.pe"
