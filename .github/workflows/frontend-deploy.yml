# 🚀 CI/CD Frontend - Dokploy Deploy
# Pipeline optimizado para frontend/production con validaciones y deploy automático

name: 🚀 Frontend CI/CD - Dokploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Permite ejecutar manualmente

env:
  NODE_VERSION: '18'
  WORKING_DIR: 'web'

jobs:
  # ✅ Validaciones y Tests
  validate:
    name: ✅ Validar Código
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.WORKING_DIR }}/package.json'

      - name: 📦 Instalar Dependencias
        working-directory: ${{ env.WORKING_DIR }}
        run: npm ci

      - name: 🔍 Lint Código
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run lint

      - name: 🔧 Verificar Tipos TypeScript
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run type-check

      - name: 🧪 Ejecutar Tests (si existen)
        working-directory: ${{ env.WORKING_DIR }}
        run: npm test --passWithNoTests || echo "No hay tests configurados"

  # 🏗️ Build y Deploy
  build-and-deploy:
    name: 🏗️ Build & Deploy
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: 📂 Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.WORKING_DIR }}/package.json'

      - name: 📦 Instalar Dependencias
        working-directory: ${{ env.WORKING_DIR }}
        run: npm ci

      - name: 🏗️ Build Aplicación
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run build

      - name: 📊 Analizar Bundle (opcional)
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          echo "📦 Tamaño del build:"
          du -sh .next/ || echo "Build directory no encontrado"

      - name: ✅ Preparar Deploy
        run: |
          echo "✅ Frontend build completado exitosamente"
          echo "🚀 Dokploy detectará este push automáticamente"
          echo "🔗 Monitorea el progreso en tu dashboard de Dokploy"
          echo "📅 Commit: ${{ github.sha }}"
          echo "👤 Deploy iniciado por: ${{ github.actor }}"
          echo "🕐 Tiempo: $(date)"

  # 🚀 Notificación de Deploy
  notify-deploy:
    name: 📢 Notificar Deploy
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: always() && needs.build-and-deploy.result == 'success'

    steps:
      - name: 🎉 Deploy Exitoso
        run: |
          echo "🎉 ¡Deploy completado exitosamente!"
          echo "🌐 La aplicación debería estar disponible pronto"
          echo "⏱️ Tiempo estimado de propagación: 2-5 minutos"
          echo "🔗 Verifica tu dominio de producción"
